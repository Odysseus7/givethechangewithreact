{"version":3,"sources":["components/logo/logo.svg","components/logo/logosmall.svg","components/logo/logo.component.jsx","firebase/firebase.utils.js","components/form-input/formInput.component.jsx","components/button/button.component.jsx","components/signin/signin.component.jsx","components/footer/footer.component.jsx","pages/index/index.jsx","components/signup/signup.component.jsx","pages/register/register.jsx","pages/dashboard/dashboard.jsx","App.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","id","width","height","xlinkHref","SvgLogo","_ref","svgRef","title","titleId","props","xmlns","xmlnsXlink","viewBox","ref","ForwardRef","SvgLogosmall","SecondaryLogo","className","MainLogo","createUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","balance","console","log","message","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","FormInput","handleChange","label","otherProps","onChange","value","Button","children","isGoogleSignIn","SignIn","useState","password","login","setLogin","redirect","setRedirect","to","handleSubmit","event","preventDefault","signInWithEmailAndPassword","error","name","prev","onSubmit","type","required","onClick","Footer","index","SignUp","confirmPassword","register","setRegister","alert","createUserWithEmailAndPassword","user","Register","Dashboard","currentUser","purchase","setPurchase","userId","formatMoney","number","Intl","NumberFormat","style","currency","format","toLocaleDateString","weekday","month","day","year","toLowerCase","change","amount","dec","parseInt","split","calculateChange","update","FieldValue","increment","collection","updateBalance","method","placeholder","min","step","signOut","App","state","setState","unsubscribeFromAuth","useEffect","onAuthStateChanged","onSnapshot","snapshot","data","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.937bb6c1.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"image\", {\n  id: \"logo\",\n  width: 628,\n  height: 148,\n  xlinkHref: \"data:img/png;base64,\"\n});\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"auto\",\n    height: 148,\n    viewBox: \"0 0 628 148\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.b798fa09.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"image\", {\n  id: \"iconfinder_money-pig-heart_2903200\",\n  width: 150,\n  height: 146,\n  xlinkHref: \"data:img/png;base64,\"\n});\n\nfunction SvgLogosmall(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"auto\",\n    height: 146,\n    viewBox: \"0 0 150 146\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogosmall);\nexport default __webpack_public_path__ + \"static/media/logosmall.130bdf25.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport {ReactComponent as LogoBig} from './logo.svg';\nimport {ReactComponent as LogoSmall} from './logosmall.svg';\n\nimport './logo.styles.scss';\n\nconst MainLogo = () => {\n    return (\n        <div className=\"svg_container\">\n            <LogoBig />  \n        </div>\n        \n    )\n}\n\nexport const SecondaryLogo = () => {\n    return (\n        <div className=\"svg_container\">\n            <LogoSmall />\n        </div>\n    )\n}\n\nexport default MainLogo;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBASSYwM3JuvD7aGj3_T887gID-EWB8YpE\",\n    authDomain: \"givethechange-e9777.firebaseapp.com\",\n    projectId: \"givethechange-e9777\",\n    storageBucket: \"givethechange-e9777.appspot.com\",\n    messagingSenderId: \"193634557734\",\n    appId: \"1:193634557734:web:d17ff72c5c58ae0760abe7\",\n    measurementId: \"G-HLL4Z9PF0R\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if(!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n\n    if(!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const balance = 0;\n        const createdAt = new Date();\n        \n        try {\n            await userRef.set({\n                displayName,\n                email,\n                balance,\n                createdAt,\n                ...additionalData\n            })\n        } catch (error) {\n            console.log('error creating user', error.message);\n        }\n    }\n\n    return userRef;\n}\n\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// setup Google auth utility\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'}); \n// always trigger the Google popup whenever we use Google for authentication\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase; // in case I want the whole library","import React from 'react'\n\nimport './formInput.scss';\n\nconst FormInput = ({handleChange, label, ...otherProps}) => {\n    return (\n        <div className=\"group\">\n        <input className=\"form-input\" onChange={handleChange} {...otherProps}/>\n        {\n            \n            label ? (<label className={`${otherProps.value.length} ? 'shrink' : '' form-input-label`}>\n                {label}\n            </label>) \n            : null\n        }\n        </div>\n    )\n}\n\nexport default FormInput;\n","import React from 'react';\nimport './button.styles.scss';\n\nconst Button = ({children, isGoogleSignIn, ...otherProps}) => {\n    return (\n        <button className={`${isGoogleSignIn ? \"google-sign-in\" : \"\"} button-primary`} {...otherProps}>{children}</button>\n    )\n}\n\nexport default Button;\n","import React, { useState } from 'react';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { Link, Redirect } from 'react-router-dom';\nimport FormInput from '../form-input/formInput.component';\nimport Button from '../button/button.component';\n\nimport './signin.styles.scss';\n\nconst SignIn = () => {\n    const [login, setLogin] = useState({\n        email: '',\n        password: '',\n    });\n\n    const [redirect, setRedirect] = useState(null);\n    if(redirect) {\n        return <Redirect to={redirect} />\n    }\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        try {\n            await auth.signInWithEmailAndPassword(email, password);\n            setRedirect(\"/dashboard\");\n        } catch (error) {\n            console.error(error);\n        }\n        \n        \n    }\n\n    const handleChange = event => {\n        const {name, value} = event.target;\n\n        setLogin(prev => ({...prev, [name]: value}));\n    }\n\n    const {email, password} = login; // destructure login state to use variables\n\n    return (\n        <div className=\"sign-in\">\n            <h1 className=\"heading-primary\">Sign in to start keeping track</h1>\n            <p className=\"intro\">\n                If you don't have an account, you can register <Link to=\"/signup\"><span className=\"blue\">here</span></Link>\n            </p>\n\n            <form className=\"sign-in-form\" onSubmit={handleSubmit}>\n                <FormInput\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={handleChange}\n                    label=\"Email\"\n                    required\n                />\n\n                <FormInput\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handleChange}\n                    label=\"Password\"\n                    required\n                />\n\n                <Button type=\"submit\">sign in</Button>\n                <Button onClick={signInWithGoogle} isGoogleSignIn>sign in with Google</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignIn;\n","import React from 'react'\nimport './footer.styles.scss';\nconst Footer = () => {\n    return (\n        <footer>\n            copyright © 2020, chalita ndunu\n        </footer>\n    )\n}\n\nexport default Footer;\n","import React from 'react';\n\nimport Logo from '../../components/logo/logo.component';\nimport SignIn from '../../components/signin/signin.component';\nimport Footer from '../../components/footer/footer.component';\n\nimport './index.styles.scss';\n\nconst index = () => {\n    return (\n        <div className=\"sign-container\">\n            <Logo />\n            <SignIn />\n            <Footer />\n        </div>\n    )\n}\n\nexport default index;\n","import React, { useState } from 'react';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { Redirect } from 'react-router-dom';\nimport FormInput from '../form-input/formInput.component';\nimport Button from '../button/button.component';\n\nimport './signup.styles.scss';\n\nconst SignUp = () => {\n    const [register, setRegister] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n    });\n\n    const [redirect, setRedirect] = useState(null);\n\n    if(redirect) {\n        return <Redirect to={redirect} />\n    }\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        if(password !== confirmPassword) {\n            alert(\"Passwords do not match\");\n            return; \n        }\n        try {\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\n            await createUserProfileDocument(user, {displayName});\n            setRedirect(\"/dashboard\");\n\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n\n    const handleChange = event => {\n        const {name, value} = event.target;\n\n        setRegister(prev => ({...prev, [name]: value}));\n    }\n\n    const { displayName, email, password, confirmPassword } = register; // destructure login state to use variables\n\n    return (\n        <div className=\"signup\">\n            <h1 className=\"heading-primary\">Let's sign you up.</h1>\n            <form className=\"form\" onSubmit={handleSubmit}>\n                <FormInput\n                    type=\"text\"\n                    name=\"displayName\"\n                    value={displayName}\n                    onChange={handleChange}\n                    label=\"Display Name\"\n                    required\n                />\n\n                <FormInput\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={handleChange}\n                    label=\"Email\"\n                    required\n                />\n\n                <FormInput\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handleChange}\n                    label=\"Password\"\n                    required\n                />\n\n                <FormInput\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label=\"Confirm password\"\n                    required\n                />\n\n                <Button>sign up</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignUp;\n","import React from 'react'\nimport { SecondaryLogo } from '../../components/logo/logo.component';\nimport SignUp from '../../components/signup/signup.component';\nimport Footer from '../../components/footer/footer.component';\nconst Register = () => {\n    return (\n        <div className='sign-container'>\n            <SecondaryLogo />\n            <SignUp />\n            <Footer />\n        </div>\n    )\n}\n\nexport default Register;\n","import React, {useState} from 'react';\n\nimport Logo from '../../components/logo/logo.component';\n\nimport firebase, { auth, firestore } from '../../firebase/firebase.utils';\n\nimport Footer from '../../components/footer/footer.component';\nimport FormInput from '../../components/form-input/formInput.component';\nimport Button from '../../components/button/button.component';\n\nimport './dashboard.styles.scss';\n\nconst Dashboard = ({currentUser}) => {\n    const [purchase, setPurchase] = useState(\"\");\n\n    const userId = currentUser.id;\n\n    const displayDate = () => {\n        const date = new Date();\n        const options = { weekday: \"long\", month: \"long\", day: \"numeric\", year: \"numeric\"};\n\n        return date.toLocaleDateString('en-EN', options).toLowerCase();\n    }\n\n    const formatMoney = (number) => {\n        return new Intl.NumberFormat('nl-NL', { style: 'currency', currency: 'EUR' }).format(number);\n    }\n\n    const handleChange = (event) => {\n        const value = event.target.value;\n        setPurchase(value);\n    }\n\n    const updateBalance = (userId, amount) => {\n        const update = firebase.firestore.FieldValue.increment(amount);\n        firestore.collection('users').doc(userId).update({ balance: update });\n    }\n\n    const calculateChange = (amount) => {\n        if(amount.indexOf('.') === -1) { // check if round purchase is entered, eg 2. Then change = 0.\n            return 0;\n        } else {\n            // Only get decimal part of change\n            let dec = parseInt((amount).split(\".\")[1]);\n\n            // check if no leading zeroes were entered\n            if((amount).split(\".\")[1].length === 1) {\n                dec = parseInt((amount).split(\".\")[1] + \"0\");\n            }\n\n            \n\n            const cents = dec / 100;\n            const change = 1 - cents;\n            return change;\n        }\n        \n    }\n\n    const reset = () => {\n        firestore.collection('users').doc(userId).update({balance: 0});\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const change = calculateChange(purchase);\n        updateBalance(userId, change);\n\n        setPurchase(\"\");\n    }\n\n    return (\n        <div className=\"dashboard\">\n            \n            <div className=\"main\">\n            <Logo />\n                <p className=\"date\">{`${displayDate()}`}</p>\n                <div className=\"balance\">\n                    <p className=\"balance_text\">current balance</p>\n                    <div className=\"balance_amount\">{formatMoney(currentUser.balance)}</div>\n                </div>\n\n                <form className=\"add\" onSubmit={handleSubmit} method=\"post\">\n                    <div className=\"add_intro\">\n                        <p>\n                            Hi <span className=\"bold\">{currentUser.displayName}</span>! What are your spendings today?\n                        </p>\n                    </div>\n\n                    <FormInput\n                        type=\"number\"\n                        name=\"purchase\"\n                        value={purchase}\n                        onChange={handleChange}\n                        placeholder={formatMoney(2.70)}\n                        min=\"0\"\n                        step=\".01\"\n                        required\n                    />\n                    <Button type=\"submit\">add</Button>\n                    <Button onClick={reset}>reset</Button>\n                    \n                </form>\n                { currentUser ? <div className=\"logout\" onClick={() => auth.signOut()}>sign out</div> : null}\n                <Footer />\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard;\n","import React, { useState, useEffect } from 'react';\n\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport Index from './pages/index/index';\nimport Register from './pages/register/register';\nimport Dashboard from './pages/dashboard/dashboard';\n\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport './App.css';\n\nfunction App() {\n  const [state, setState] = useState({currentUser: null});\n\n  let unsubscribeFromAuth = null;\n\n  useEffect(() => {\n    /* code that will be ran on component mount. if the 2nd arg is an empty array, it will\n    behave exactly like componentDidMount. If you pass a value, useEffect will execute everytime\n    those values change.*/\n\n    unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if(userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapshot => {\n          setState({currentUser: {\n            id: snapshot.id,\n            ...snapshot.data()\n          }});\n        });\n      }\n\n      setState({currentUser: null}) // if there is no userauth, there is no current user.\n    });\n\n    return function cleanup() {\n      unsubscribeFromAuth();\n    };\n\n  }, []);\n\n  return (\n    <div className=\"App\">\n    <Router>\n      <Switch> \n          <Route exact path='/' render={props => state.currentUser ? <Dashboard {...props} currentUser={state.currentUser} /> : <Index />} />\n          <Route exact path='/signup' component={Register} />\n          <Route exact path='/dashboard' render={props => state.currentUser ? <Dashboard {...props} currentUser={state.currentUser} /> : <Redirect to=\"/\" />}/>\n      </Switch>\n    </Router>\n\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}